const Discord = require('discord.js');
const db = require('quick.db');
const config = require("../config");
const teams = new db.table("Teams");

module.exports = {
    name: 'teaminvite',
    aliases: ['inviteteam', 'teaminv'],
    usage: 'teaminvite <@utilisateur>',
    category: "teams",
    description: `Permet d'inviter un utilisateur dans votre √©quipe.`,
    async execute(client, message, args) {
        let color = db.fetch(`color_${message.guild.id}`)
        if (color == null) color = config.bot.couleur;

        // V√©rifier si l'utilisateur est dans une √©quipe
        const userTeam = teams.get(`user_${message.guild.id}_${message.author.id}`);
        if (!userTeam) {
            return message.reply({
                embeds: [
                    new Discord.MessageEmbed()
                        .setColor(color)
                        .setDescription(`‚ùå Vous n'√™tes pas dans une √©quipe.`)
                        .setFooter({ text: config.bot.footer })
                ]
            });
        }

        // R√©cup√©rer les donn√©es de l'√©quipe
        const teamData = teams.get(`team_${message.guild.id}_${userTeam}`);
        if (!teamData) {
            // Si les donn√©es de l'√©quipe n'existent pas, nettoyer les donn√©es utilisateur
            teams.delete(`user_${message.guild.id}_${message.author.id}`);
            return message.reply({
                embeds: [
                    new Discord.MessageEmbed()
                        .setColor(color)
                        .setDescription(`‚ùå √âquipe introuvable. Vos donn√©es ont √©t√© nettoy√©es.`)
                        .setFooter({ text: config.bot.footer })
                ]
            });
        }

        // V√©rifier si l'utilisateur est le propri√©taire ou un administrateur de l'√©quipe
        if (teamData.owner !== message.author.id && !teamData.admins?.includes(message.author.id)) {
            return message.reply({
                embeds: [
                    new Discord.MessageEmbed()
                        .setColor(color)
                        .setDescription(`‚ùå Seul le propri√©taire ou les administrateurs de l'√©quipe peuvent inviter des membres.`)
                        .setFooter({ text: config.bot.footer })
                ]
            });
        }

        // V√©rifier si un utilisateur a √©t√© mentionn√©
        const member = message.mentions.members.first();
        if (!member) {
            return message.reply({
                embeds: [
                    new Discord.MessageEmbed()
                        .setColor(color)
                        .setDescription(`‚ùå Veuillez mentionner un utilisateur √† inviter.`)
                        .setFooter({ text: config.bot.footer })
                ]
            });
        }

        // V√©rifier si l'utilisateur est d√©j√† dans une √©quipe
        const targetTeam = teams.get(`user_${message.guild.id}_${member.id}`);
        if (targetTeam) {
            return message.reply({
                embeds: [
                    new Discord.MessageEmbed()
                        .setColor(color)
                        .setDescription(`‚ùå Cet utilisateur est d√©j√† dans une √©quipe.`)
                        .setFooter({ text: config.bot.footer })
                ]
            });
        }

        // V√©rifier si l'utilisateur est d√©j√† dans cette √©quipe
        if (teamData.members.includes(member.id)) {
            return message.reply({
                embeds: [
                    new Discord.MessageEmbed()
                        .setColor(color)
                        .setDescription(`‚ùå Cet utilisateur est d√©j√† membre de votre √©quipe.`)
                        .setFooter({ text: config.bot.footer })
                ]
            });
        }

        // V√©rifier si l'utilisateur est d√©j√† invit√©
        if (teamData.invites && teamData.invites.includes(member.id)) {
            return message.reply({
                embeds: [
                    new Discord.MessageEmbed()
                        .setColor(color)
                        .setDescription(`‚ùå Cet utilisateur a d√©j√† √©t√© invit√© dans votre √©quipe.`)
                        .setFooter({ text: config.bot.footer })
                ]
            });
        }

        // Activer le syst√®me d'invitation si ce n'est pas d√©j√† fait
        if (!teamData.inviteOnly) {
            teamData.inviteOnly = true;
        }

        // Initialiser la liste des invitations si elle n'existe pas
        if (!teamData.invites) {
            teamData.invites = [];
        }

        // Ajouter l'utilisateur √† la liste des invit√©s
        teamData.invites.push(member.id);
        teams.set(`team_${message.guild.id}_${userTeam}`, teamData);

        // Cr√©er les boutons d'acceptation et de refus
        const acceptButton = new Discord.MessageButton()
            .setCustomId(`team_accept_${message.guild.id}_${userTeam}`)
            .setLabel('Accepter')
            .setStyle('SUCCESS');

        const declineButton = new Discord.MessageButton()
            .setCustomId(`team_decline_${message.guild.id}_${userTeam}`)
            .setLabel('Refuser')
            .setStyle('DANGER');

        const row = new Discord.MessageActionRow().addComponents(acceptButton, declineButton);

        // Envoyer l'invitation √† l'utilisateur
        try {
            await member.send({
                embeds: [
                    new Discord.MessageEmbed()
                        .setColor(color)
                        .setTitle(`üì® Invitation √† rejoindre une √©quipe`)
                        .setDescription(`**${message.author.tag}** vous invite √† rejoindre l'√©quipe **${teamData.name}** sur le serveur **${message.guild.name}**.\n\nDescription: ${teamData.description}\n\nVous pouvez accepter ou refuser cette invitation en utilisant les boutons ci-dessous, ou en utilisant la commande \`teamjoin ${teamData.name}\` sur le serveur.`)
                        .setFooter({ text: config.bot.footer })
                ],
                components: [row]
            });

            return message.reply({
                embeds: [
                    new Discord.MessageEmbed()
                        .setColor(color)
                        .setTitle(`‚úÖ Invitation envoy√©e`)
                        .setDescription(`Une invitation √† rejoindre l'√©quipe **${teamData.name}** a √©t√© envoy√©e √† **${member.user.tag}**.`)
                        .setFooter({ text: config.bot.footer })
                ]
            });
        } catch (error) {
            console.error(error);
            return message.reply({
                embeds: [
                    new Discord.MessageEmbed()
                        .setColor(color)
                        .setTitle(`‚ö†Ô∏è Invitation non envoy√©e`)
                        .setDescription(`Impossible d'envoyer un message priv√© √† **${member.user.tag}**. Ses messages priv√©s sont peut-√™tre ferm√©s.\n\nL'utilisateur a tout de m√™me √©t√© ajout√© √† la liste des invit√©s et pourra rejoindre l'√©quipe avec la commande \`teamjoin ${teamData.name}\`.`)
                        .setFooter({ text: config.bot.footer })
                ]
            });
        }
    }
};